name: Planemo Tool Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install click==8.1.0  # Explicit version to prevent conflicts
        pip install planemo

    - name: Verify installation
      run: |
        pip list | grep -E 'click|planemo'
        planemo --version

    - name: Verify directory structure
      run: |
        echo "Repository contents:"
        ls -la
        echo "Checking tool directories:"
        [ -d fastp-bracken ] || { echo "fastp-bracken directory not found"; exit 1; }
        [ -d mlst-amrfinder-staramr ] || { echo "mlst-amrfinder-staramr directory not found"; exit 1; }
        [ -d quast ] || { echo "quast directory not found"; exit 1; }

    - name: Test FastP-Bracken tool
      run: |
        planemo test \
          --galaxy_python_version 3.10 \
          --conda_install \
          --conda_ensure_channels conda-forge,bioconda,defaults \
          fastp-bracken/quality_script_fastp_bracken.xml
      continue-on-error: true

    - name: Test MLST-AMRFinder-StarAMR tool
      run: |
        planemo test \
          --galaxy_python_version 3.10 \
          --conda_install \
          --conda_ensure_channels conda-forge,bioconda,defaults \
          mlst-amrfinder-staramr/mlst_amrfinder_staramr.xml
      continue-on-error: true

    - name: Test QUAST tool
      run: |
        planemo test \
          --galaxy_python_version 3.10 \
          --conda_install \
          --conda_ensure_channels conda-forge,bioconda,defaults \
          quast/quast_get_fasta.xml
      continue-on-error: true

    - name: List output files
      if: always()
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Tool test output files:"
        find . -name "tool_test_output.html" -o -name "*.json"

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: planemo-test-reports
        path: |
          ./**/*.html
          ./**/*.json
